laravel引入sentry
https://docs.sentry.io/clients/php/integrations/laravel/

https://laravel-china.org/articles/4295/centos6-install-python-based-on-sentry#reply22542
https://laravel-china.org/articles/4285/build-your-own-sentry-service


基于 Python 安装 Sentry,centos搭建sentry过程

安装Sentry需要以下满足以下条件:
基于UNIX的操作系统
PostgreSQL：版本 9.5 以上，推荐最新版本 9.6
Redis：最低版本 2.8.9, 推荐 2.8.18, 3.0
Python 2.7
Pip 8.1+
安装下列软件：
python-setuptools, python-dev, libxslt1-dev, gcc, libffi-dev, libjpeg-dev, libxml2-dev, libxslt-dev, libyaml-dev, libpq-dev
推荐 yum 安装。

1. 安装必要软件
yum -y install python-setuptools python-dev libxslt1-dev gcc libffi-dev libjpeg-dev libxml2-dev libxslt-dev libyaml-dev libpq-dev

2.安装PostgreSQL
$ cd ~
$ wget https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-6-x86_64/pgdg-redhat96-9.6-3.noarch.rpm
$ rpm -ivh ./pgdg-redhat96-9.6-3.noarch.rpm

移除之前的版本
$ rpm -qa | grep postgre
postgresql84-devel-8.4.3-2PGDG.rhel6.x86_64
postgresql84-libs-8.4.3-2PGDG.rhel6.x86_64
postgresql84-contrib-8.4.3-2PGDG.rhel6.x86_64
postgresql84-server-8.4.3-2PGDG.rhel6.x86_64
postgresql84-8.4.3-2PGDG.rhel6.x86_64

$ yum remove postgresql84 postgresql84-devel postgresql84-libs postgresql84-contrib postgresql84-server

查看安装新版 yum 源后可以安装的版本
$ yum list postgres* | grep 96

$ yum -y install postgresql96 postgresql96-devel postgresql96-libs postgresql96-server
$ # 初始化数据库
$ /etc/init.d/postgresql-9.6 initdb
$ # 开启数据库
$ /etc/init.d/postgresql-9.6 start

3.安装redis，参考server下安装redis


/////////////////////////////////////////////////////

推荐使用docker安装sentry:
https://docs.sentry.io/server/installation/docker/
https://laravel-china.org/articles/4285/build-your-own-sentry-service

可以直接看这里的安装说明:
https://github.com/getsentry/onpremise

Requirements
Docker 1.10.0+
Compose 1.6.0+ (optional)

Up and Running
Assuming you've just cloned this repository, the following steps will get you up and running in no time!

There may need to be modifications to the included docker-compose.yml file to accommodate your needs or your environment.
These instructions are a guideline for what you should generally do.

mkdir -p data/{sentry,postgres} 
- Make our local database and sentry config directories. This directory is bind-mounted with postgres so you don't lose state!

docker-compose run --rm web config generate-secret-key 
- Generate a secret key. Add it to docker-compose.yml in base as SENTRY_SECRET_KEY.

docker-compose run --rm web upgrade 
- Build the database. Use the interactive prompts to create a user account.

docker-compose up -d 
- Lift all services (detached/background mode).

Access your instance at localhost:9000!
Note that as long as you have your database bind-mounted, you should be fine stopping and removing the containers without worry.

腾讯企业邮箱配置说明:
http://service.exmail.qq.com/cgi-bin/help?subtype=1&&id=28&&no=1000585

sentry发送邮件配置:
shell> vim /root/onpremise/docker-compose.yml
version: '2'
services:
  base:
    restart: unless-stopped
    build: .
    environment:
      # Run `docker-compose run web config generate-secret-key`
      # to get the SENTRY_SECRET_KEY value.
      SENTRY_SECRET_KEY: 'xxxxxxx'
      SENTRY_MEMCACHED_HOST: memcached
      SENTRY_REDIS_HOST: redis
      SENTRY_POSTGRES_HOST: postgres
      SENTRY_EMAIL_HOST: "smtp.exmail.qq.com"
      SENTRY_EMAIL_PORT: 587
      SENTRY_EMAIL_USER: "noreply@xxx.com"
      SENTRY_SERVER_EMAIL: "noreply@xxx.com"
      SENTRY_EMAIL_PASSWORD: "这里填密码"
      SENTRY_EMAIL_USE_TLS: 'true'

保存之后重启docker:
docker-compose down && docker-compose up -d

安装github文档安装 => 配置 docker-compose.yml

腾讯云服务器默认是把25端口禁用的，云主机 TCP 25 端口出方向被封禁!

docker sentry配置:
https://github.com/getsentry/onpremise/blob/master/sentry.conf.py#L4

在页面上进行的配置:

1.邮箱配置好之后需要在admin和account中验证邮箱是否正常!
在{{url}}/manage/status/mail/中可以测试邮箱配置是否正常!!

2.在{{url}}/account/settings/appearance/ 外观中
设置本地化语言为简体中文
设置时区为(UTC+0800) Asia/Shanghai 24小时制

3.在{{url}}/settings/sentry/项目/alerts/里面
警报设置 最小发送间隔 为1分钟，最大发送间隔 为10分钟
