zend_extension="xdebug.so"

;所有的函数
;https://xdebug.org/docs/all_functions


;When this setting is set to on, the tracing of function calls will be enabled just before the script is run. This makes it possible to trace code in the auto_prepend_file.
xdebug.auto_trace=0


;https://xdebug.org/docs/all_settings#collect_assignments
;This setting, defaulting to 0, controls whether Xdebug should add variable assignments to function traces.
xdebug.collect_assignments=1


;https://xdebug.org/docs/all_settings#collect_params
;0	None.
;1	Type and number of elements (f.e. string(6), array(8)).
;2	Type and number of elements, with a tool tip for the full information 1.
;3	Full variable contents (with the limits respected as set by xdebug.var_display_max_children, xdebug.var_display_max_data and xdebug.var_display_max_depth.
;4	Full variable contents and variable name.
;5	PHP serialized variable contents, without the name. (New in Xdebug 2.3)
xdebug.collect_params=4


;https://xdebug.org/docs/all_settings#collect_return
;This setting, defaulting to 0, controls whether Xdebug should write the return value of function calls to the trace files.
xdebug.collect_return=1


;This setting, defaulting to 1, controls whether Xdebug should write the filename used in include(), include_once(), require() or require_once() to the trace files.
;xdebug.collect_includes=1
xdebug.default_enable=1


;https://xdebug.org/docs/all_settings#trace_format
;0 shows a human readable indented trace file with,1 writes a computer readable format which has two different records,2 writes a trace formatted in (simple) HTML.
xdebug.trace_format=0
;When set to '1' the trace files will be appended to, instead of being overwritten in subsequent requests.
xdebug.trace_options=0
;The directory where the tracing files will be written to, make sure that the user who the PHP will be running as has write permissions to that directory.
;xdebug.trace_output_dir=/Users/dujunwen/Desktop/test/csv
xdebug.trace_output_dir=/Users/dujunwen/project/github/LieToMe/storage/logs
xdebug.trace_output_name=trace.%s
;https://xdebug.org/docs/stack_trace
xdebug.filename_format=%f
;When this setting is set to 1, you can trigger the generation of trace files by using the XDEBUG_TRACE GET/POST parameter, or set a cookie with the name XDEBUG_TRACE
;xdebug.trace_enable_trigger=1
;xdebug.trace_enable_trigger_value="djw"


;When this setting is set to 1, Xdebug will show a stack trace whenever an Exception or Error is raised - even if this Exception or Error is actually caught.
;Error 'exceptions' were introduced in PHP 7.
;xdebug.show_exception_trace=1


;可以通过xdebug_get_declared_vars()来获取声明的变量
xdebug.collect_vars=1


xdebug.force_display_errors=1
;xdebug.force_error_reporting=0
xdebug.max_nesting_level=256
;xdebug.scream=1
;xdebug.remote_enable=true
xdebug.var_display_max_depth=10
xdebug.cli_color=2


xdebug.dump_globals=1
xdebug.dump_undefined=1
;xdebug.dump.*
;Type: string, Default value: Empty
;* can be any of COOKIE, FILES, GET, POST, REQUEST, SERVER, SESSION. These seven settings control which data from the superglobals is shown when an error situation occurs.
;Each of those php.ini setting can consist of a comma seperated list of variables from this superglobal to dump, or * for all of them. Make sure you do not add spaces in this setting.
;In order to dump the REMOTE_ADDR and the REQUEST_METHOD when an error occurs, and all GET parameters, add these settings:
;xdebug.dump.SERVER = REMOTE_ADDR,REQUEST_METHOD
;xdebug.dump.GET = *
xdebug.dump.GET=*
xdebug.dump.POST=*
;xdebug.dump.SERVER=*


;Type: integer, Default value: 0, Introduced in Xdebug >= 2.4
;When this setting is set to 1, Xdebug will show a stack trace whenever an Error is raised - even if this Error is actually caught.
xdebug.show_error_trace=1


;需要的时候可以在代码里面设置,ini_set('xdebug.show_local_vars', 'on');
;When this setting is set to something != 0 Xdebug's generated stack dumps in error situations will also show all variables in the top-most scope. 
;Beware that this might generate a lot of information, and is therefore turned off by default.
;xdebug.show_local_vars=1


xdebug.halt_level=E_WARNING|E_NOTICE|E_USER_WARNING|E_USER_NOTICE
xdebug.var_display_max_data=4096
xdebug.dump_once=1


;https://xdebug.org/docs/all_settings#show_mem_delta
;When this setting is set to something != 0 Xdebug's human-readable generated trace files will show the difference in memory usage between function calls.
xdebug.show_mem_delta=1

;https://xdebug.org/docs/garbage_collection
xdebug.gc_stats_enable=1
xdebug.gc_stats_output_dir=/Users/dujunwen/project/github/LieToMe/storage/logs
xdebug.gc_stats_output_name=gcstats.%s

xdebug.overload_var_dump=2
