; Enable Zend OPcache extension module
zend_extension=opcache.so

; http://php.net/manual/zh/opcache.configuration.php

; Determines if Zend OPCache is enabled
; 启用操作码缓存。如果禁用此选项，则不会优化和缓存代码
; 在运行期使用 ini_set() 函数只能禁用 opcache.enable 设置，不可以启用此设置。 如果在脚本中尝试启用此设置项会产生警告。
opcache.enable=1

; Determines if Zend OPCache is enabled for the CLI version of PHP
opcache.enable_cli=0

; The OPcache shared memory storage size.
; OPcache 的共享内存大小，以兆字节为单位
opcache.memory_consumption=128

; The amount of memory for interned strings in Mbytes.
; 用来存储预留字符串的内存大小，以兆字节为单位
opcache.interned_strings_buffer=8

; The maximum number of keys (scripts) in the OPcache hash table.
; Only numbers between 200 and 100000 are allowed.
; OPcache 哈希表中可存储的脚本文件数量上限
; 最大值在 PHP 5.5.6 之前是 100000，PHP 5.5.6 及之后是 1000000
; 真实的取值是在质数集合 {223, 463, 983, 1979, 3907, 7963, 16229, 32531, 65407, 130987} 中找到的第一个大于等于设置值的质数
opcache.max_accelerated_files=7963

; The maximum percentage of "wasted" memory until a restart is scheduled.
; 浪费内存的上限，以百分比计。 如果达到此上限，那么 OPcache 将产生重新启动续发事件。
opcache.max_wasted_percentage=1

; 如果启用，OPcache 将在哈希表的脚本键之后附加改脚本的工作目录， 以避免同名脚本冲突的问题。
; 禁用此选项可以提高性能，但是可能会导致应用崩溃。
opcache.use_cwd=1

; 如果启用，那么 OPcache 会每隔 opcache.revalidate_freq 设定的秒数 检查脚本是否更新。
; 如果禁用此选项，你必须使用 opcache_reset() 或者 opcache_invalidate() 函数来手动重置 OPcache，也可以 通过重启 Web 服务器来使文件系统更改生效。
opcache.validate_timestamps=1

; 检查脚本时间戳是否有更新的周期，以秒为单位。 设置为 0 会导致针对每个请求， OPcache 都会检查脚本更新
; 如果 opcache.validate_timestamps 配置指令设置为禁用，那么此设置项将会被忽略
opcache.revalidate_freq=86400

; 如果禁用，脚本文件中的注释内容将不会被包含到操作码缓存文件， 这样可以有效减小优化后的文件体积。
; 禁用此配置指令可能会导致一些依赖注释或注解的 应用或框架无法正常工作， 比如： Doctrine， Zend Framework 2 以及 PHPUnit。
opcache.save_comments=0

; 如果禁用，则即使文件中包含注释，也不会加载这些注释内容。
opcache.load_comments=0

; 如果启用，则会使用快速停止续发事件。 所谓快速停止续发事件是指依赖 Zend 引擎的内存管理模块 一次释放全部请求变量的内存，而不是依次释放每一个已分配的内存块。
opcache.fast_shutdown=1

; 如果启用，则在调用函数 file_exists()， is_file() 以及 is_readable() 的时候， 都会检查操作码缓存，无论文件是否已经被缓存。 如果应用中包含检查 PHP 脚本存在性和可读性的功能，这样可以提升性能。
; 但是如果禁用了 opcache.validate_timestamps 选项， 可能存在返回过时数据的风险。
opcache.enable_file_override=1

; OPcache 黑名单文件位置。 黑名单文件为文本文件，包含了不进行预编译优化的文件名，每行一个文件名。 黑名单中的文件名可以使用通配符，也可以使用前缀。 此文件中以分号（;）开头的行将被视为注释。
opcache.blacklist_filename=/usr/local/etc/php/7.1/conf.d/opcache_blacklist.txt

; OPcache 模块的错误日志文件
opcache.error_log=/Users/dujunwen/project/github/LieToMe/storage/logs/opcache_error.log

; OPcache 模块的日志级别。 默认情况下，仅有致命级别（0）及错误级别（1）的日志会被记录。 其他可用的级别有：警告（2），信息（3）和调试（4）。
opcache.log_verbosity_level=2

; Enables or disables copying of PHP code (text segment) into HUGE PAGES.
; This should improve performance, but requires appropriate OS configuration.
; 正式环境可以开启
;opcache.huge_code_pages=1
