1.PHP 支持四种标量值（标量值不能拆分为更小的单元，例如和数组不同）类型：整型值（integer），浮点数值（float），字符串值（string）和布尔值（boolean）。
PHP 也支持两种复合类型：数组和对象。这两种类型具可以赋值给变量或者从函数返回。
标量:bi fs

2.有效的类型申明
http://php.net/manual/zh/functions.arguments.php#functions.variable-arg-list

类或者接口名称、self、array、callable、bool、float、int、string

3.函数返回值类型申明
http://php.net/manual/zh/functions.returning-values.php

function sum($a, $b): int {
    return $a + $b;
}

4.error
http://php.net/manual/zh/language.errors.php7.php

Throwable
    Error
    Exception
    
Error 类并非继承自 Exception 类，所以不能用 catch (Exception $e) { ... } 来捕获 Error。你可以用 catch (Error $e) { ... }，
或者通过注册异常处理函数（ set_exception_handler()）来捕获 Error。
由于Error和Exception都继承自Throwable所以可以使用catch(Throwable $t)来同时捕获异常或者错误

5.http基本认证除了可以在nginx上直接认证外还可以在php中认证
http://php.net/manual/zh/features.http-auth.php

6.php可以像其他脚本一样运行
http://php.net/manual/zh/features.commandline.php

#!/usr/bin/php
<?php
    var_dump($argv);
?>

7.如果只是简单的调试php代码不想更改服务器配置的话可以使用内置服务器
http://php.net/manual/zh/features.commandline.webserver.php

$ cd ~/public_html
$ php -S localhost:8000

8.如何查看php的编译信息
php -i | grep configure
nginx是nginx -V

9.php共享存储位置,安装目录lib下
/Users/dujunwen/Desktop/test/after_build/php7.1.17/lib/php/extensions/no-debug-non-zts-20160303

10.官网的php安装方法
http://php.net/manual/zh/install.unix.nginx.php

准备好php源文件,考虑需要的支持或者扩展
cd ../php-x.x.x
./configure --enable-fpm --with-mysql ...省略了
make
sudo make install

如何创建配置文件呢？
是work环境就将源码中的php.ini-development拷贝到安装目录下的lib目录，然后将名称改为php.ini
是线上环境就将源码中的php.ini-production拷贝到安装目录下的lib目录，然后将名称改为php.ini

cp php.ini-development /usr/local/php/php.ini
cp /usr/local/etc/php-fpm.conf.default /usr/local/etc/php-fpm.conf
cp sapi/fpm/php-fpm /usr/local/bin

修改配置php.ini php-fpm.conf
启动php-fpm

11.php-fpm如何知道是从哪里读取php配置信息的呢？
php-fpm是跟随php(通过 --enable-fpm)安装的，哦，明了了

12.密码散列
http://php.net/manual/zh/book.password.php

$password = 'djwtes';
$hash = password_hash($password, PASSWORD_DEFAULT);
var_dump($hash, password_verify($password, $hash), password_get_info($hash));

13.html和php
http://php.net/manual/zh/faq.html.php

显示数据的时候必须使用htmlspecialchars — 将特殊字符转换为 HTML 实体

14.phpize命令的作用
http://php.net/manual/zh/install.pecl.phpize.php

phpize 命令是用来准备 PHP 扩展库的编译环境的

15.PEAR, PECL和Perl的区别
PEAR是PHP扩展与应用库（the PHP Extension and Application Repository）的缩写。它是一个PHP扩展及应用的一个代码仓库，简单地说，
PEAR就是PHP的CPAN。

PECL （PHP Extension Community Library），PHP的扩展库，它提供了一系列已知的扩展库，由C++等其他语言编写而成，以.so形式出现，.so 为共享库,
是shared object,用于动态连接的,和dll差不多，为比PEAR更快，但是与PEAR不同的是，PECL需要在服务器上配置并被注册到主机中。

Perl （Practical Extraction and Report Language)Perl借取了C、sed、awk、shell scripting以及很多其他程序语言的特性。
其中最重要的特性是它内部集成了正则表达式的功能，以及巨大的第三方代码库CPAN。简而言之，Perl象C一样强大，象awk、sed等脚本描述语言一样方便

最直接的表述：Pear是PHP的上层扩展，Pecl是PHP的底层扩展。

16.php-config
http://php.net/manual/zh/install.pecl.php-config.php

php-config 是一个简单的命令行脚本用于获取所安装的 PHP 配置的信息。

在编译扩展时，如果安装有多个 PHP 版本，可以在配置时用 --with-php-config 选项来指定使用哪一个版本编译，该选项指定了相对应的 php-config 
脚本的路径。

php-config 脚本在命令行所能使用的选项可以通过 -h 选项来显示：
Usage: /usr/local/bin/php-config [OPTION]
Options:
  --prefix            [...]
  --includes          [...]
  --ldflags           [...]
  --libs              [...]
  --extension-dir     [...]
  --include-dir       [...]
  --php-binary        [...]
  --php-sapis         [...]
  --configure-options [...]
  --version           [...]
  --vernum            [...]
  
获取php的configure信息可以用:
$ php-config --configure-options

获取php扩展安装路径:
$ php-config --extension-dir
/usr/lib/php/extensions/no-debug-non-zts-20160303

17.
