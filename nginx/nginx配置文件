1.单个指令
http://nginx.org/en/docs/beginners_guide.html

nginx consists of modules which are controlled by directives specified in the configuration file. 
Directives are divided into simple directives and block directives.
A simple directive consists of the name and parameters separated by spaces and ends with a semicolon (;).
A block directive has the same structure as a simple directive, but instead of the semicolon it ends with a set of additional
instructions surrounded by braces ({ and }). If a block directive can have other directives inside braces,
it is called a context (examples: events, http, server, and location).

Directives placed in the configuration file outside of any contexts are considered to be in the main context.
The events and http directives reside in the main context, server in http, and location in server.
The rest of a line after the # sign is considered a comment.

2.获取静态资源配置
server {
    listen 80;
    server_name loc.nginx.t;

    location / {
        root  /Users/dujunwen/Desktop/test/data;
        index test.html;
    }

    location /images/ {
        root  /Users/dujunwen/Desktop/test/data;
    }
}

上面配置可以简写为:
server {
    # 默认监听的就是80端口
    server_name loc.nginx.t;
    root /Users/dujunwen/Desktop/test/data;

    location / {
        index test.html;
    }
}
现在访问图片需要输入http://loc.nginx.t/images/zan.png

在上面的基础上扩展:
server {
    server_name loc.nginx.t;
    root /Users/dujunwen/Desktop/test/data;

    location / {
        index test.html;
    }

    location ~ \.(gif|jpg|png)$ {
        root /Users/dujunwen/Desktop/test/data/images;
    }
}
现在访问图片只需要输入http://loc.nginx.t/zan.png

root指令后面指定的路径如果是以/开头那么就是从根目录下查找，如果不以/根开头就是相对默认路径(nginx prefix)下的
如何获取nginx prefix?
$ nginx -V
sudo nginx -V
Password:
nginx version: nginx/1.13.12
built by clang 9.0.0 (clang-900.0.39.2)
built with OpenSSL 1.1.0e  16 Feb 2017
TLS SNI support enabled
configure arguments: --prefix=/usr/local/Cellar/nginx/1.10.3 --with-http_ssl_module --with-pcre ...

If there are several matching location blocks nginx selects the one with the longest prefix.
nginx在多个location都匹配的时候选择的是最长路径匹配location

在将目录权限改大后还是出现403的话可以修改 user 用户 用户组，用户和组跟 location root下目录对应的用户和组一致即可

3.为了加快处理静态配置nginx使用哈希表来存储这些配置
http://nginx.org/en/docs/hash.html

在需要的时候首先考虑的是加大server_names_hash_max_size的值
那么什么时候是需要的时候呢?
可以简单的使用nginx -T | wc -l来统计 如果值大于512就可以适当的加大server_names_hash_max_size值

Syntax:	server_names_hash_max_size size;
Default:	server_names_hash_max_size 512;
Context:	http
Sets the maximum size of the server names hash tables. 

4.nginx debug log
http://nginx.org/en/docs/debugging_log.html
http://www.360doc.com/content/12/1114/11/1073512_247759364.shtml

默认情况下nginx是没有开启debug模式的，先验证nginx -V是否有with-debug，如果没有那么进行增量编译
nginx配置是支持增量编译的，在之前编译基础上增加--with-debug，编译安装好之后用error_log指令设置debug模式

5.将nginx日志通过syslog记录到指定的服务器上
http://nginx.org/en/docs/syslog.html
http://oopsguy.com/2017/07/23/nginx-document-logging-to-syslog/

6.nginx配置单位
http://nginx.org/en/docs/syntax.html

Sizes can be specified in bytes, kilobytes (suffixes k and K) or megabytes (suffixes m and M), for example, “1024”, “8k”, “1m”.
Offsets may be also specified in gigabytes using g or G suffixes.
Time intervals can be specified in milliseconds, seconds, minutes, hours, days and so on, using the following suffixes:

ms	milliseconds
s	seconds
m	minutes
h	hours
d	days
w	weeks
M	months, 30 days
y	years, 365 days

7.nginx处理请求的过程
http://nginx.org/en/docs/http/request_processing.html

一个简单的配置php配置
server {
    listen      80;
    server_name example.org www.example.org;
    root        /data/www;

    location / {
        index   index.html index.php;
    }

    location ~* \.(gif|jpg|png)$ {
        expires 30d;
    }

    location ~ \.php$ {
        fastcgi_pass  localhost:9000;
        fastcgi_param SCRIPT_FILENAME
                      $document_root$fastcgi_script_name;
        include       fastcgi_params;
    }
}

8.nginx同时监听多个端口
http://nginx.org/en/docs/http/server_names.html
server {
    listen       80;
    listen       8080  default_server;
    server_name  example.net;
    ...
}

server {
    listen       80  default_server;
    listen       8080;
    server_name  example.org;
    ...
}

server {
    listen       80;
    server_name  example.org
                 www.example.org
                 ""
                 192.168.1.1
                 ;
    ...
}

A special wildcard name in the form “.example.org” can be used to match both the exact name 
“example.org” and the wildcard name “*.example.org”.

9.优化server name和listen配置
http://nginx.org/en/docs/http/server_names.html

If a server is the only server for a listen port, then nginx will not test server names at all 
(and will not build the hash tables for the listen port).

10.nginx负载均衡
http://nginx.org/en/docs/http/load_balancing.html

nginx支持的负载均衡方法(3种):
round-robin — requests to the application servers are distributed in a round-robin fashion,
least-connected — next request is assigned to the server with the least number of active connections,
ip-hash — a hash-function is used to determine what server should be selected for the next request (based on the client’s IP address).

http {
    upstream myapp1 {
        [round-robin|least-connected|ip-hash]
        server srv1.example.com;
        server srv2.example.com;
        server srv3.example.com;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://myapp1;
        }
    }
}

To configure load balancing for HTTPS instead of HTTP, just use “https” as the protocol.

如果想让一些服务器获取更多的请求可以设置权重:
 upstream myapp1 {
    server srv1.example.com weight=3;
    server srv2.example.com;
    server srv3.example.com;
}
现在有5个请求过来,3个会到srv1,剩下的两台机器各分配到1个


11.
