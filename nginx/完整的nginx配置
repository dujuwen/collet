user nginx; 
#这里在线上应该将nginx程序设置为root所有者,chown root /path/to/nginx,chmod u+s /path/to/nginx,然后这里设置了用户才不会出错

worker_processes auto;
worker_cpu_affinity auto; #利用多核cpu来提高nginx性能
worker_rlimit_nofile 65535; #不能超过ulimit -n的值,同时最大打开文件数,这个值尽量调整大点

error_log /var/log/nginx/error.log notice;
#可选的日志级别 debug(需要在编译的时候加上--with-debug), info, notice, warn, error, crit, alert, or emerg

pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
# include /usr/share/nginx/modules/*.conf; #这里看实际情况再定

charset utf-8; #Adds the specified charset to the “Content-Type” response header field

events {
    worker_connections 1024; #这里可以根据情况调整,worker_rlimit_nofile对这里有影响
}

http {

    server {
        listen       8000;
        server_name  test.loc;

        root /Users/dujunwen/project/github/LieToMe/public;
        index  index.php index.html index.htm;

        location / {
           try_files $uri $uri/ /index.php?$args;
        }

        #还可以将静态文件特殊处理
        location /assets/(js|css|images)/ {
            #todo
        }

        error_page   404 /404.html;
        location = /404.html {
            root /usr/local/Cellar/nginx/1.6.2/html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/local/Cellar/nginx/1.6.2/html;
        }

        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1d;
            add_header Cache-Control "max-age=86400, public";
        }

        location ~ "^(.+\.php)($|/)" {
            fastcgi_index index.php;
            try_files $uri $uri/ /index.php?$args =404; #=404一定要加上，找不到就跳到404页面
            include        fastcgi_params;
            fastcgi_split_path_info ^(.+\.php)(.*)$;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_pass   127.0.0.1:9000;
        }
    }

}

