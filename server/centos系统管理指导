https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/index

1.系统本地化配置
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/ch-keyboard_configuration

SYSTEM LOCALE
These settings can be made by modifying the /etc/locale.conf configuration file or by using the localectl utility

2.设置日期和时区
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/chap-configuring_the_date_and_time

Network Time Protocol(NTP，网络时间协议)

# timedatectl
      Local time: 三 2018-05-30 17:08:40 CST
  Universal time: 三 2018-05-30 09:08:40 UTC
        RTC time: 三 2018-05-30 09:08:40
       Time zone: Asia/Shanghai (CST, +0800)
     NTP enabled: yes
NTP synchronized: yes
 RTC in local TZ: no
      DST active: n/a
      
修改日期和时间:
timedatectl set-time YYYY-MM-DD
timedatectl set-time HH:MM:SS
The command will fail if an NTP service is enabled.

如果通过set-time错误的修改的时间，如何恢复回本地时间？可以通过自动同步时间来修复:
# yum -y install ntp
# timedatectl set-ntp yes

安装好ntp后看看是否启动:
# ps uax | grep ntpd
ntp        7606  0.0  0.2  29940  2104 ?        Ss   17:00   0:00 /usr/sbin/ntpd -u ntp:ntp -g

如果RTC time和Local time不一致可以通过下面命令同步:
# timedatectl set-local-rtc 1
# timedatectl set-local-rtc 0

修改时区:
# timedatectl list-timezones | grep -i shanghai //查看支持的时区
# timedatectl set-timezone Asia/Shanghai //修改时区

3.自动生成密码工具和更改用户密码过期信息
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/chap-hardening_your_system_with_tools_and_services#sec-Password_Security

# pwmake
用法: pwmake <entropy-bits>
例如生成64位密码:
# pwmake 64 //可以多次生成直到自己满意为止
0c,@JivOmvAtFy 

root用户可以直接用passwd设置用户的新密码而不需要旧密码:
# passwd user-name

chage命令是用来修改帐号和密码的有效期限,查看用户账户过期情况:
# chage -l root
强制用户zt下次登录的时候必须修改密码:
# chage -d 0 zt

4.ssh禁止用户通过密码登录(这步操作一定要在ssh-copy-id添加秘钥之前)
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/s1-ssh-configuration

# vim /etc/ssh/sshd_config
PasswordAuthentication no

重启服务，查看服务状态:
# systemctl restart sshd
# systemctl status sshd

通过ssh-copy-id添加秘钥的用户不受影响

如果已经修改了禁止密码登录并且重启了sshd服务那么怎么添加新的用户免密登录呢?
# cd /home/djw
# cat ~/.ssh/id_rsa.pub
# su wo
# mkdir .ssh
# stat .ssh //查看目录权限是不是0700
# chmod 0700 .ssh
# vim .ssh/authorized_keys
把获取的公钥添加到这个文件里面就可以了
# stat .ssh/authorized_keys //查看文件权限是不是0600不是的话修改为0600
# chmod 0600 .ssh/authorized_keys
# su root

5.检查硬件错误
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sec-checking_for_hardware_errors
# yum install rasdaemon
# ras-mc-ctl --summary

6.log rotate
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/s1-basic_configuration_of_rsyslog

7.定时器任务
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/ch-automating_system_tasks#s1-Scheduling_a_Recurring_Job_Using_Cron

The root user uses the cron table in /etc/crontab, or, preferably, creates a cron table file in /etc/cron.d/

# cat /etc/crontab
SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root

# For details see man 4 crontabs

# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed

in which minutes of an hour to execute the job. For example, use 0,10,20,30,40,50 or 0/10 to specify every 10 minutes of an hour.
in which hours of a day to execute the job. For example, use 17-20 to specify time from 17:00 to 20:59.
in which days of a month to execute the job. For example, use 15 to specify 15th day of a month.
in which months of a year to execute the job. For example, use Jun,Jul,Aug or 6,7,8 to specify the summer months of the year.
in which days of the week to execute the job. For example, use * for the job to execute independently of the day of week.

Scheduling Hourly, Daily, Weekly, and Monthly Jobs
To schedule an hourly, daily, weekly, or monthly job:
Put the actions you want your job to execute into a shell script.
Put the shell script into one of the following directories:
/etc/cron.hourly/
/etc/cron.daily/
/etc/cron.weekly/
/etc/cron.monthly/

From now, your script will be executed - the crond service automatically executes any scripts present in
/etc/cron.hourly, /etc/cron.daily, /etc/cron.weekly, and /etc/cron.monthly directories at their corresponding times.

8.
