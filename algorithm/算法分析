什么叫指数, 幂, 底数, 对数?

在乘方 a^n 中, 其中的 a 叫做底数, n 叫做指数, 结果叫幂.
如果 a^n=b, 那么 log(a)(b)=n. 其中, a 叫做 “底数”,b 叫做 “真数”,n 叫做 “以 a 为底 b 的对数”.
log(a)(b) 函数叫做对数函数. 对数函数中 b 的定义域是 b>0, 零和负数没有对数；a 的定义域是 a>0 且 a≠1.

log 是对数这个英文单词(logarithm 对数)的缩写.
在数学里面, log 用于表示一般的对数, 可以用任意一个大于1的正整数作为底数.【举例, 2 的 2 次方等于 4, 那么, log2(4) 就等于 2】
而 lg 在数学里面称为常用对数, 常用对数就是以 10 为底数的对数.【举例, 10 的 2 次方等于 100, 那么 lg(100) 就等于 2】

1.时间复杂度

常见的渐进时间复杂度
通常用 O(1) 表示常数计算时间。常见的渐进时间复杂度有：
O(1) < O(log2(n)) < O(n) < O(nlog2(n)) < O(n*n) < O(n*n*n) < O(2*2*2...)

规则
为了便于估算一个算法的时间复杂度，我们约定一下几条可操作的规则：
（1）读写单个常量或单个变量、赋值、算术运算、关系运算、逻辑运算等，计为一个单位时间。
（2）条件语句 if(C){s}，执行时间为（条件 C 的执行时间）+（语句块 s 的执行时间）。
（3）条件语句 if(C)s1 else s2，执行时间为（条件 C 的执行时间）+（语句块 s1 和 s2 中执行时间最长的那个时间）。
（4）switch...case 语句的执行时间是所有 case 子句中，执行时间最长的语句块。
（5）访问一个数据的单个元素或一个结构体变量的单个元素只需要一个单位时间。
（6）执行一个 for 循环语句需要的时间等于执行该循环体所需要时间乘上循环次数。
（7）执行一个 while(C){s} 循环语句或者执行一个 do{s} while(C) 语句，需要的时间等于计算条件表达式 C 的时间与执行循环 s 的时间之和再乘以循环的次数。
（8）对于嵌套结构，算法的时间复杂度由嵌套最深层语句的执行次数决定的。
（9）对于函数调用语句，它们需要的时间包括两部分，一部分用于实现控制转移，另一部分用于执行函数本身。

