https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html
https://dev.mysql.com/doc/refman/8.0/en/using-mysqldump.html
https://blog.csdn.net/zyz511919766/article/details/12853133
http://www.cnblogs.com/qq78292959/p/3637135.html
企业备份:
https://dev.mysql.com/doc/mysql-enterprise-backup/8.0/en/

vim /etc/my.conf 添加:
[mysqldump]
user=root
password=R2T%<ybxSsVG
host=192.168.242.142
max-allowed-packet=256M
add-drop-table=0
no-create-db=1
no-create-info=1
replace
quick
disable-keys
skip-extended-insert #insert/replace INTO table VALUES ();就是每行插入一条数,在数据比较多的时候启用,少的时候禁用
skip-triggers
single-transaction

1.打印默认配置信息:
~ mysqldump --print-defaults

--single-transaction
在备份前设置事务隔离级别为REPEATABLE READ并向server发送START TRANSACTION语句。仅对事务型表如InnoDB有用。
与--ock-tables互斥。对于大文件备份--single-transaction与--quick结合使用。

2.备份语法:
shell> mysqldump [options] db_name [tbl_name ...]
shell> mysqldump [options] --databases db_name ...
shell> mysqldump [options] --all-databases

shell> mysqldump --databases db_name1 [db_name2 ...] > my_databases.sql
shell> mysqldump --all-databases > all_databases.sql

3.定点备份:
shell> mysqldump --all-databases --master-data --single-transaction > all_databases.sql

4.mysqldump备份分为两种:有--tab和没有--tab的

没有--tab的是纯sql通过mysqldump备份，通过mysqld来恢复:
https://dev.mysql.com/doc/refman/8.0/en/mysqldump-sql-format.html

shell> mysqldump db_name > backup-file.sql
shell> mysql db_name < backup-file.sql
shell> mysql -e "source /path-to-backup/backup-file.sql" db_name

有--tab的是纯sql通过mysqldump备份，通过mysqld来恢复表，通过mysqlimport或者LOAD DATA INFILE来恢复数据:
https://dev.mysql.com/doc/refman/8.0/en/reloading-delimited-text-dumps.html

shell> mysqldump --tab=/tmp/db_bak --fields-terminated-by=,--fields-enclosed-by='"' --lines-terminated-by=0x0d0a dbname
shell> mysql dbname < tablename.sql
shell> mysqlimport --fields-terminated-by=,--fields-enclosed-by='"' --lines-terminated-by=0x0d0a dbname tablename.txt
或者
mysql> USE db1;
mysql> LOAD DATA INFILE '/tmp/db_bak/tablename.txt' INTO TABLE tablename;

十六进制的0x0d0a对应的是\r\n

5.跨服务器拷贝整个数据库
https://dev.mysql.com/doc/refman/8.0/en/mysqldump-copying-to-other-server.html
https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html#option_mysqldump_master-data

mysqldump is also very useful for populating databases by copying data from one MySQL server to another:
shell> mysqldump --opt djw | mysql --host=192.168.242.140 -C djw
shell> mysqldump --opt db_name | mysql --host=remote_host -C db_name

还可以通过:
On Server 1:
shell> mysqldump --databases db1 > dump.sql
On Server 2:
shell> mysql < dump.sql

On Server 1:
shell> mysqldump db1 > dump.sql
On Server 12:
shell> mysqladmin create db1
shell> mysql db1 < dump.sql

6.只备份数据库结构或者数据
https://dev.mysql.com/doc/refman/8.0/en/mysqldump-definition-data-dumps.html

shell> mysqldump --no-data test > dump-defs.sql
shell> mysqldump --no-create-info test > dump-data.sql
