检测端口是否运行

lsof -i:3306
netstat -tunlp|grep 3306
ss -tulnp|grep 3306

mysql 事务
1).事务及其ACID属性
A(Atomicity [ætəmˈɪsɪti])代表原子性，即事务是一个原子操作单元，对数据的修改，要么全部执行，要么一个都不执行;
C(Consistency [kənˈsɪstənsi] )代表一致性，在事务开始和完成时，数据都必须保持一致状态。这意味着所有相关的数据规则都必须应用于事务的修改，
以保持数据的完整性；事务结束时，所有的内部数据结构(如B树索引或双向链表)也必须是正确的。
如转账业务，无论事务执行成功与否，参与转账的两个账号余额之和应该是不变的。
I(Isolation [aɪsəˈleɪʃn] )代表隔离性，即两个事务不会相互影响、覆盖彼此数据等;
D(Durability [djʊərə'bɪlətɪ])表示持久化，即一旦事务提交后，它所做的修改将会永久的保存在数据库上，即使出现宕机也不会丢失。
2).并发事务处理带来的问题
对于同时运行的多个事务, 当这些事务访问数据库中相同的数据时, 如果没有采取必要的隔离机制, 就会导致各种并发问题:
a).更新丢失: 当两个或多个事务选择同一行，然后基于选定的值更新该行时，由于每个事务都不知道其他事务的存在，就会发生丢失更新问题：
最后的更新覆盖了由其他事务所做的更新。
b).脏读: 对于两个事物 T1, T2, T1 读取了已经被 T2 更新但尚未提交 的字段. 之后, 若 T2 回滚, T1读取的内容就是临时且无效的。
也就是读取了其他事务还没有提交的数据
c).不可重复读: 对于两个事物 T1, T2, T1 读取了一个字段, 然后 T2 更新了该字段. 之后, T1再次读取同一个字段, 值就不同了。
当前事务已经读取的数据记录，被其他事务修改或删除。
d).幻读: 对于两个事物 T1, T2, T1从一个表中读取了一个字段, 然后T2在该表中 新增了 一些新的行. 之后, 如果T1再读取同一个表,
就会多出几行。其他事务插入了新的数据，当前事务以相同的查询条件，在那个事务插入数据之前和之后查询数据，得到的数据条数不一样
3).事务隔离级别
隔离级别（isolation level），是指事务与事务之间的隔离程度。
显然，事务隔离程度越高，并发性越差、性能越低；事务隔离程度越低，并发性越强、性能越高。
Mysql 支持4种事务隔离级别. Mysql 默认的事务隔离级别为: REPEATABLE READ
a).read uncommitted(读未提交数据)：允许事务读取未被其他事物提交的变更。脏读、不可重复读和幻读的问题都会出现
b).read commited(读已提交数据)：只允许事务读取已经被其他事务提交的变更。可避免脏读，但不可重复读和幻读问题仍然存在
c).repeatable read(可重复读)：确保事务可以多次从一个字段中读取相同的值，在这个事务持续期间，禁止其他事务对这个字段进行更新。
可避免脏读和不可重复读，但幻读的问题仍然存在
d).serializable(串行化)：确保事务可以从一个表中读取相同的行，在这个事务持续期间，禁止其他事务对该表执行增删改操作。
所有的并发问题都可以避免，但性能什么低下。

查看当前数据库的事务隔离级别：show variables like 'tx_isolation'

