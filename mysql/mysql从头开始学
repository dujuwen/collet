1.查看mysql server启动状态
# systemctl status mysqld

2.通过mysql客户端登录和退出
shell> mysql -h host -u user -p

shell> mysql -h host -u user -p dbname
Enter password: *

shell> mysql -h host -u user -ppassword dbname
Enter password: *

mysql> QUIT/exit/crtl+D
Bye

3.mysql查询语句字母大小写不敏感,数据库名称和表名称是大小写敏感的
mysql> select VERSION(), version(), now(), user(), current_date;
+-----------+-----------+---------------------+----------------+--------------+
| VERSION() | version() | now()               | user()         | current_date |
+-----------+-----------+---------------------+----------------+--------------+
| 8.0.11    | 8.0.11    | 2018-06-04 10:11:50 | root@localhost | 2018-06-04   |
+-----------+-----------+---------------------+----------------+--------------+

4.创建数据库和查看当前数据库
mysql> create database test;
mysql> use test
mysql> select database(); //查看当前数据库

5.聚合查询除聚合字段之外的字段
https://dev.mysql.com/doc/refman/8.0/en/example-maximum-column-group-row.html

SELECT article, MAX(price) AS price FROM shop GROUP BY article;

要查询其他字段怎么办?LEFT JOIN:
SELECT s1.article, s1.dealer, s1.price
FROM shop s1
LEFT JOIN shop s2 ON s1.article = s2.article AND s1.price < s2.price
WHERE s2.article IS NULL;

6.使用用户自定义变量
mysql> SELECT @min_price:=MIN(price),@max_price:=MAX(price) FROM shop;
mysql> SELECT * FROM shop WHERE price=@min_price OR price=@max_price;

7.计算用户访问天数
https://dev.mysql.com/doc/refman/8.0/en/calculating-days.html

SELECT year,month,BIT_COUNT(BIT_OR(1<<day)) AS days FROM t1 GROUP BY year,month;
SELECT year,month,count(distinct day) AS days FROM t1 GROUP BY year,month;

1、BIT_COUNT( expr )：返回 expr 的二进制表达式中”1“的个数。
     例如：29 = 11101 则：BIT_COUNT（29）= 4；

2、BIT_OR( expr )：返回 expr 中所有比特的bitwise OR。计算执行的精确度为64比特(BIGINT) 。
　  例如：上面例子中，2000年02月中有一条2号的记录两条23号的记录，所以"1<<day"表示出来就是 “1＜＜2”和“1＜＜23”，
   得到二进制数 100 和 100000000000000000000000 。然后再OR运算。即 100 OR 10000000000000000000000 OR 10000000000000000000000 
   = 100000000000000000000100；这样再用BIT_COUNT处理得出的值就是2，自动去除了重复的日期。
   
8.mysql批处理数据,可以用于查询数据也可以批量导入数据
https://dev.mysql.com/doc/refman/8.0/en/batch-mode.html
# mysql -uroot -p -A test < /root/batch.sql
# mysql -uroot -p -A test < /root/batch.sql  > ./batch.out
mysql> source filename;
mysql> \. filename

9.修改自增长id
mysql> ALTER TABLE tbl AUTO_INCREMENT = 100;

10.mysql的选项 -N, --skip-column-names 在查询结果中不输出字段名称，在有些查询输出还是有用的

11.在mysql命令行登录的时候每次都要输入密码,可以修改配置文件不用输入密码:
https://dev.mysql.com/doc/refman/8.0/en/option-files.html

# vim /etc/my.conf

[client]
# The following password will be sent to all standard MySQL clients
password="my password"

[mysql]
connect_timeout=2
max_allowed_packet=64M # 等价于 mysql> SET GLOBAL max_allowed_packet=64M;
database=test
user=root
# password="my password" #这里的password是针对mysql命令行而言的

重启服务:
# systemctl restart mysqld

修改了配置文件后可以通过命令查看默认配置：
# mysql --print-defaults
mysql would have been started with the following arguments:
--password=*****

12.执行批处理
https://dev.mysql.com/doc/refman/8.0/en/mysql.html

shell> mysql db_name < script.sql > output.tab

13.修改配置文件my.conf添加mysql命令行配置:
https://dev.mysql.com/doc/refman/8.0/en/mysql-commands.html

# vim /etc/my.cnf
[mysqld]
default-authentication-plugin=mysql_native_password

datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock

log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
user=mysql
ssl-ca=/var/lib/mysql2/ca.pem
ssl-cert=/var/lib/mysql2/server-cert.pem
ssl-key=/var/lib/mysql2/server-key.pem

[mysql] #这一块客户端有需要的都可以添加
user=root
password=xxxxxxx
default-character-set=utf8
prompt="(\\u@\\h) [\\d] \\R:\\m:\\s >" #登录后有提示类似这样: (root@localhost) [djw] 21:04:51 >
tee=/tmp/mysql_client.log #操作日志记录到/tmp/mysql_client.log

[mysqladmin]
user=root
password=R2T%<ybxSsVG

重启数据库:
# systemctl restart mysqld 

14.mysql服务端帮助
(root@localhost) [(none)] 21:14:29 >help contents;
You asked for help about help category: "Contents"
For more information, type 'help <item>', where <item> is one of the following
categories:
   Account Management
   Administration
   Components
   Compound Statements
   Data Definition
   Data Manipulation
   Data Types
   Functions
   Functions and Modifiers for Use with GROUP BY
   Geographic Features
   Help Metadata
   Language Structure
   Plugins
   Storage Engines
   Table Maintenance
   Transactions
   User-Defined Functions
   Utility
   
15.mysqladmin
https://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html

A client that performs administrative operations, such as creating or dropping databases, reloading the grant tables,
flushing tables to disk, and reopening log files. mysqladmin can also be used to retrieve version, process, and
status information from the server.

Where command is a one or more of: (Commands may be shortened)
  create databasename	Create a new database
  debug			Instruct server to write debug information to log
  drop databasename	Delete a database and all its tables
  extended-status       Gives an extended status message from the server
  flush-hosts           Flush all cached hosts
  flush-logs            Flush all logs
  flush-status		Clear status variables
  flush-tables          Flush all tables
  flush-threads         Flush the thread cache
  flush-privileges      Reload grant tables (same as reload)
  kill id,id,...	Kill mysql threads
  password [new-password] Change old password to new-password in current format
  ping			Check if mysqld is alive
  processlist		Show list of active threads in server
  reload		Reload grant tables
  refresh		Flush all tables and close and open logfiles
  shutdown		Take server down
  status		Gives a short status message from the server
  start-slave		Start slave
  stop-slave		Stop slave
  variables             Prints variables available
  version		Get version info from server

查看服务器状态信息,All commands can be shortened to any unique prefix.:
# mysqladmin proc stat  //是mysqladmin procsslist status的缩写
+----+-----------------+-----------+----+---------+------+------------------------+------------------+
| Id | User            | Host      | db | Command | Time | State                  | Info             |
+----+-----------------+-----------+----+---------+------+------------------------+------------------+
| 4  | event_scheduler | localhost |    | Daemon  | 217  | Waiting on empty queue |                  |
| 12 | root            | localhost |    | Query   | 0    | starting               | show processlist |
+----+-----------------+-----------+----+---------+------+------------------------+------------------+
Uptime: 217  Threads: 2  Questions: 13  Slow queries: 0  Opens: 110  Flush tables: 2  Open tables: 86  Queries per second avg: 0.059

16.mysqld secure-file-priv特性
secure-file-priv参数是用来限制LOAD DATA, SELECT ... OUTFILE, and LOAD_FILE()传到哪个指定目录的。
当seure_file_priv的值为null ，表示限制mysqld 不允许导入|导出
当secure_file_priv的值为/tmp/ ，表示限制mysqld 的导入|导出只能发生在/tmp/目录下
当secure_file_priv的值没有具体值时，表示不对mysqld 的导入|导出做限制

17.mysqlimport
https://dev.mysql.com/doc/refman/8.0/en/mysqlimport.html

The mysqlimport client provides a command-line interface to the LOAD DATA INFILE SQL statement.
shell> mysqlimport [options] db_name textfile1 [textfile2 ...]

18.mysqld 自增长值:
auto_increment_offset + (N - 1) × auto_increment_increment (N从1开始)
默认 1 + (n-1) * 1 = n;

[mysqld]
auto-increment-offset=1
auto_increment_increment=2
自增长id依次为:1,3,5,7,9......

[mysqld]
auto-increment-offset=2
auto_increment_increment=2
自增长id依次为:2,4,6,8,10......

19.mysqlpump
https://dev.mysql.com/doc/refman/8.0/en/mysqlpump.html

mysqlpump可以多线程备份数据，跟mysqldump比较大不同之处是：先创建表导入数据后再创建索引
备份所有的用户:
shell> mysqlpump --exclude-databases=% --users

Wildcard characters are permitted in the object names:
% matches any sequence of zero or more characters.
_ matches any single character.

20.mysqlshow — Display Database, Table, and Column Information
https://dev.mysql.com/doc/refman/8.0/en/mysqlshow.html

shell> mysqlshow [options] [db_name [tbl_name [col_name]]]

--count	Show the number of rows per table
--keys	Show table indexes
--status	Display extra information about each table

21.mysqldumpslow解析和总结慢日志
Usage: mysqldumpslow [ OPTS... ] [ LOGS... ]

22.显示配置文件中的自定义选项
https://dev.mysql.com/doc/refman/8.0/en/my-print-defaults.html

例如显示配置文件中的[client]和[mysql]配置:
shell> my_print_defaults  client mysql
--show, -s选项可以显示明文密码

mysql_config_editor显示本地配置:
➜  ~ mysql_config_editor print --all
[client]
user = root
password = *****
host = 192.168.242.143

23.lz4_decompress，解压mysqlpump lz4压缩输出文件
https://dev.mysql.com/doc/refman/8.0/en/lz4-decompress.html

shell> lz4_decompress input_file output_file

Example:
shell> mysqlpump --compress-output=LZ4 > dump.lz4
shell> lz4_decompress dump.lz4 dump.txt

zlib_decompress Decompress mysqlpump ZLIB-Compressed Output:
shell> mysqlpump --compress-output=ZLIB > dump.zlib
shell> zlib_decompress dump.zlib dump.txt

24.perror，根据数据库错误码打印出错误信息
shell> perror [options] errorcode ...

25.如何kill掉某个处理进程?
shell> mysqladmin ping
mysqld is alive
shell> mysqladmin processlist
+----+-----------------+---------------------+-----+---------+------+------------------------+------------------+
| Id | User            | Host                | db  | Command | Time | State                  | Info             |
+----+-----------------+---------------------+-----+---------+------+------------------------+------------------+
| 4  | event_scheduler | localhost           |     | Daemon  | 1259 | Waiting on empty queue |                  |
| 9  | root            | 192.168.242.1:62352 | djw | Sleep   | 707  |                        |                  |
| 12 | root            | localhost           |     | Query   | 0    | starting               | show processlist |
+----+-----------------+---------------------+-----+---------+------+------------------------+------------------+
shell> mysqladmin kill 9


mysql> show processlist;
mysql> kill 进程id;

26.下面两个是等价的
SET GLOBAL max_connections = 1000;
SET @@global.max_connections = 1000;

select @@global.max_connections;
show global variables like 'max_connections';

27.mandatory_roles，在启动时或者运行时配置所有用户的默认角色
https://dev.mysql.com/doc/refman/8.0/en/roles.html

[mysqld]
mandatory_roles='role1,role2@localhost,r3@%.example.com'

To set and persist mandatory_roles at runtime, use a statement like this:
SET PERSIST mandatory_roles = 'role1,role2@localhost,r3@%.example.com';

28.当一个旧账户不用的时候可以删除，可以修改密码，可以限制其登录
https://dev.mysql.com/doc/refman/8.0/en/roles.html

CREATE USER 'old_app_dev'@'localhost' IDENTIFIED BY 'old_app_devpass';
GRANT ALL ON old_app.* TO 'old_app_dev'@'localhost';
ALTER USER 'old_app_dev'@'localhost' IDENTIFIED BY 'new_password';
ALTER USER 'old_app_dev'@'localhost' ACCOUNT LOCK;
CREATE USER 'new_app_dev1'@'localhost' IDENTIFIED BY 'new_password';
GRANT 'old_app_dev'@'localhost' TO 'new_app_dev1'@'localhost';

29.访问控制
https://dev.mysql.com/doc/refman/8.0/en/privilege-system.html

访问控制第一阶段认证用户名、host、密码和用户帐户是否被锁定
访问控制第一阶段认证该连接发出的每个请求：user, db, tables_priv, columns_priv, or procs_priv

30.权限变化
https://dev.mysql.com/doc/refman/8.0/en/privilege-changes.html

在mysqld启动的时候它会读取所有的权限表到内存中，有些操作是立即生效的有些操作是要手动执行刷新权限操作才会生效的，如果不确定是否生效在
涉及到权限的修改之后可以手动更新内存中的权限信息：
mysql> FLUSH PRIVILEGES;
sehll> mysqladmin flush-privileges
shell> mysqladmin reload

一般直接修改权限表是需要手动刷新权限的。

31.语言结构
https://dev.mysql.com/doc/refman/8.0/en/language-structure.html

datetime取值范围
'1000-01-01 00:00:00.000000' to '9999-12-31 23:59:59.999999'
timestamp取值范围
'1970-01-01 00:00:01.000000' UTC to '2038-01-19 03:14:07.999999'

32.字符集合和排序规则
https://dev.mysql.com/doc/refman/8.0/en/charset-mysql.html
https://dev.mysql.com/doc/refman/8.0/en/charset-database.html
https://dev.mysql.com/doc/refman/8.0/en/charset-applications.html

查看支持的字符集合:
mysql> SHOW CHARACTER SET;
查看支持的排序规则:
mysql> SHOW COLLATION
系统元字符变量:
mysql> SHOW VARIABLES LIKE 'character_set_system';

CREATE DATABASE mydb
  CHARACTER SET latin1
  COLLATE latin1_swedish_ci;
  
CREATE DATABASE db_name
    [[DEFAULT] CHARACTER SET charset_name]
    [[DEFAULT] COLLATE collation_name]

ALTER DATABASE db_name
    [[DEFAULT] CHARACTER SET charset_name]
    [[DEFAULT] COLLATE collation_name]

列字符集:
https://dev.mysql.com/doc/refman/8.0/en/charset-column.html

col_name {CHAR | VARCHAR | TEXT} (col_length)
    [CHARACTER SET charset_name]
    [COLLATE collation_name]
    
col_name {ENUM | SET} (val_list)
    [CHARACTER SET charset_name]
    [COLLATE collation_name]

ALTER TABLE t MODIFY col1 CHAR(50) CHARACTER SET utf8;

33.字符集
https://dev.mysql.com/doc/refman/8.0/en/charset-unicode-sets.html

utf8mb4: A UTF-8 encoding of the Unicode character set using one to four bytes per character.
utf8mb3: A UTF-8 encoding of the Unicode character set using one to three bytes per character.
utf8: An alias for utf8mb3.

34.数据类型
https://dev.mysql.com/doc/refman/8.0/en/data-types.html

35.数字型
https://dev.mysql.com/doc/refman/8.0/en/numeric-type-overview.html
https://dev.mysql.com/doc/refman/8.0/en/numeric-types.html

M indicates the maximum display width for integer types. The maximum display width is 255. 
Display width is unrelated to the range of values a type can contain, as described in Section 11.2, “Numeric Types”.
For floating-point and fixed-point types, M is the total number of digits that can be stored.

TINYINT[(M)] [UNSIGNED] [ZEROFILL]
A very small integer. The signed range is -128 to 127. The unsigned range is 0 to 255.

BOOL, BOOLEAN
These types are synonyms for TINYINT(1)

SMALLINT[(M)] [UNSIGNED] [ZEROFILL]
A small integer. The signed range is -32768 to 32767. The unsigned range is 0 to 65535.

MEDIUMINT[(M)] [UNSIGNED] [ZEROFILL]
A medium-sized integer. The signed range is -8388608 to 8388607. The unsigned range is 0 to 16777215.

INT[(M)] [UNSIGNED] [ZEROFILL]
A normal-size integer. The signed range is -2147483648 to 2147483647. The unsigned range is 0 to 4294967295.

BIGINT[(M)] [UNSIGNED] [ZEROFILL]
A large integer. The signed range is -9223372036854775808 to 9223372036854775807. The unsigned range is 0 to 18446744073709551615.

DECIMAL[(M[,D])] [UNSIGNED] [ZEROFILL]
A packed “exact” fixed-point number. M is the total number of digits (the precision) and D is the number of digits after the decimal point (the scale). 

36.日期
https://dev.mysql.com/doc/refman/8.0/en/date-and-time-type-overview.html
https://dev.mysql.com/doc/refman/8.0/en/date-and-time-types.html

DATETIME[(fsp)]
A date and time combination. The supported range is '1000-01-01 00:00:00.000000' to '9999-12-31 23:59:59.999999'.

TIMESTAMP[(fsp)]
A timestamp. The range is '1970-01-01 00:00:01.000000' UTC to '2038-01-19 03:14:07.999999' UTC. 

CREATE TABLE t1 (
  ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  dt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE t1 (
  ts TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)
);

TIMESTAMP(6)值类似:2018-06-26 10:26:24.972427，代表6毫秒位数的精度

37.对于类型括号里面的数字比如:varchar(5)，整形是显示形式不影响取值范围，浮点型限制了数字最大长度，字符型也限制了字符最大长度
https://dev.mysql.com/doc/refman/8.0/en/string-type-overview.html

[NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE collation_name]
A variable-length string. M represents the maximum column length in characters. The range of M is 0 to 65,535.

For example, utf8 characters can require up to three bytes per character, so a VARCHAR column that uses the 
utf8 character set can be declared to be a maximum of 21,844 characters

38.货币类型
https://dev.mysql.com/doc/refman/8.0/en/fixed-point-types.html

The DECIMAL and NUMERIC types store exact numeric data values. These types are used when it is important to preserve exact precision, for example with monetary data.

例如:
salary DECIMAL(5,2)
Standard SQL requires that DECIMAL(5,2) be able to store any value with five digits and two decimals, 
so values that can be stored in the salary column range from -999.99 to 999.99.

39.

