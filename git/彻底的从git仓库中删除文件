故事开始是这样的：
要把GitHub上的项目迁移到公司搭建GitLab上，一开始的想法是把项目从GitHub上clone到本地，诶突然发现：
Cloning into 'xxx_gitlab'...
remote: Counting objects: 33056, done.
remote: Compressing objects: 100% (143/143), done.
error: RPC failed; curl 18 transfer closed with outstanding read data remaining
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed

修改了超时等等配置还是不行，这个网速慢的很啊

这个项目开发了一年多仓库比较大了，克隆的很吃力啊，如果简单的把之前的代码历史记录这些丢掉拷贝到新的目录，然后提交到gitlab上也可以，
这样做快但是历史记录就丢失了。
另外的一种办法是给先把代码克隆下来然后改下git remote url提交到新地址的仓库里面，MD，就是克隆不下来，就想到给原仓库瘦身。

如何彻底的从git仓库中删除文件？
核心思路：先使用git rm 物理删除对应文件(或者文件夹)，然后将这些文件从仓库的历史记录中抹去


如何移除git仓库中移除敏感数据?
https://help.github.com/articles/removing-sensitive-data-from-a-repository/


可以使用git的filter-branch或者使用BFG(一个字快)
https://rtyley.github.io/bfg-repo-cleaner/
下面我使用BFG删除:
1.先使用git rm删除文件或文件夹，然后commit+push到远程仓库中，接着将修改合并到其他有过改文件的分支上
git rm xx
git commit -m 'rm xx'
git push
[other branch] git merge ..
2.下载BFG
wget http://repo1.maven.org/maven2/com/madgag/bfg/1.13.0/bfg-1.13.0.jar
3.确认安装了java环境(没有就安装)
➜  git git:(master) java -version
java version "1.8.0_141"
Java(TM) SE Runtime Environment (build 1.8.0_141-b15)
Java HotSpot(TM) 64-Bit Server VM (build 25.141-b15, mixed mode)
4.使用命令查看帮助:
java -jar ~/Desktop/test/bfg-1.13.0.jar
➜  git git:(master) java -jar ~/Desktop/test/bfg-1.13.0.jar
bfg 1.13.0
Usage: bfg [options] [<repo>]
...

然后使用命令从本地.git目录中删除文件存在的历史记录：
java -jar ~/Desktop/test/bfg-1.13.0.jar --delete-files userpassword.txt .git
删除完成后会提示你：
Deleted files
-------------

	Filename        Git id
	-----------------------------------------------
	test_djw.tetx | fc70ced3 (7 B), d572e8af (10 B)


In total, 8 object ids were changed. Full details are logged here:

	/Users/dujunwen/Desktop/test/helloworld/test1/.git.bfg-report/2018-03-02/22-02-06

BFG run is complete! When ready, run: git reflog expire --expire=now --all && git gc --prune=now --aggressive


$ cd some-big-repo.git
$ git reflog expire --expire=now --all && git gc --prune=now --aggressive

5.强推到远程仓库
$ git push -f --all

注意事项：
1.必须在所有分支上物理删除对应文件(不然有一天把没有删除干净的分支推送到远端的时候上面做的就白干了)
2.使用BFG或者git filter-branch后都会对所有包含文件的提交记录进行重写，都会生成新的提交记录，它们的sha值都会变
3.在执行操作的时候锁定git库任何人不能提交并且在操作完成之后所有人重新clone库

使用du命令可以查看git仓库大小：du -h //当然要除去没有提交到git上的文件
确认.git大小：du -sh .git
git count-objects -vH

https://git-scm.com/book/zh/v1/Git-%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86-%E7%BB%B4%E6%8A%A4%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D
在不知道大文件具体名称的情况下如何移除大文件?
第一步，查找大文件:
➜  h3 git:(master) git verify-pack -v .git/objects/pack/pack-5cfcd3669d46a5fe1a1e617be47e837888e2423d.idx | sort -k 3 -n | tail -3
5009fa86408e528c265b61b1528750f86dfbb32f blob   86692 16125 222920
d5c2f17fc9dd03d5485f6ec75d1e9aa897d7766a blob   103810 29620 180796
63ab513b1d32d2a2f2162ccafa620062ade89fca blob   13465496 12314300 23919

第二步，根据二进制文件查找对应文件名:
➜  h3 git:(master) git rev-list --objects --all | grep 63ab513
63ab513b1d32d2a2f2162ccafa620062ade89fca bfg-1.13.0.jar

第三步，使用bfg删除对应文件:
java -jar ~/Desktop/test/bfg-1.13.0.jar --delete-files bfg-1.13.0.jar .git

第四步，强制覆盖远程仓库:
git push --all -f
