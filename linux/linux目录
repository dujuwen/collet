Linux的文件夹结构看上去很复杂，怎么理解呢?

我们这里假设，我们就是设计者，如果我们设计一个文件系统，我们会如何去做呢?

我们需要一个起点， 这个起点就叫根目录，用“/”来表示，然后我们需要启动Linux,那么我们就会把所有核心的启动文件(包括Linux核心本身)都放到一个“/boot"目录下。

当系统启动后，我们需要执行一些基本命令在操作系统，这些命令都会放到“/bin"目录下。然后这些命令可能会用到一些库，
这些库就被放到“/lib"下面，而这些库可能会会用到一些设备驱动文件，

那么这些驱动文件就会放到“/dev"目录下。



/：根目录

/boot:系统启动和内核

/bin ：系统基本命令 (bin是binary的缩写)

/lib : 系统库(不能直接运行的代码)(lib是libary的缩写)

/dev : 设备驱动 (dev是device的缩写)

到目前为止只用5个目录，很简单吧。


 什么是"/usr" ，"/etc"和“/var“

当用户启动系统以后，要做一些更加复杂的工作，这时候就会涉及到一个叫“/usr",这个情况稍微有些复杂，是一个难点。不过也很容易解释清楚。

早期的unix系统都有很多块硬盘，当时硬盘的容量都很小， 所以往往一个硬盘只放一个目录，比如“/boot"可以放在一个单独的"boot"盘上，上面提到的5个目录，是系统运行必不可少的。

而当系统启动以后，我们需要其他一些用于具体工作的程序时，我们就会加载一个“/usr"目录，上面放重要的运行程序。

容易引起疑惑的是"usr"这个名字， 在历史上，原来这个确实是user的缩写，不过现在和user没有任何关系了， 你可以把它看成是"universal software resource"的缩写。

这个“/usr"有点类似Windows里面的Program Files。

因此 /bin 和 /usr/bin的区别，就是 /bin里面的程序更加核心

这时候，很多人会有疑问， 我们记住哪些命令在/bin 还是在/usr/bin呢?

放心，由于所有的bin目录都会登记到系统变量PATH里面， 因此无论你在任何当前目录中，只要输入命令文件的名称，系统都会帮你找到这个命令并运行。


要点：


1、/usr上面一般都是只读文件，数据文件和配置文件不放在上面(放到哪里，后面会讲)

2,没有“/usr",linux系统也能正常运行

2、/usr可以被多台电脑共享(这里体现Linux系统的网络性)

由于/usr只放只读文件，那么配置文件和数据文件放哪里呢?这里就出现了2个新的目录“/etc"和“/var"

这里容易初学者迷惑的就是这个2个目录的名字。


在历史上 "etc“是 “etcetera”，中文意为“其他”， 现在这个和“其他”没有任何关系， 就是专门存放配置文件的地方，可以理解为“editable text configuration"的缩写

比如 /etc/mysql就是放mysql的配置文件 /ect/apache2/就是apache2的配置文件

在历史上“var" 是 “variable"，中文意为“变动”，现在主要用来存放log,lock等文件。

例如 /var/mysql就是用来存放mysql的log
