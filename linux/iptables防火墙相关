官网文档
https://netfilter.org/documentation/HOWTO//packet-filtering-HOWTO-7.html
https://netfilter.org/documentation/HOWTO/cn/packet-filtering-HOWTO-7.html
https://netfilter.org/documentation/index.html

https://likegeeks.com/linux-iptables-firewall-examples/#Iptables-on-CentOS-7
http://www.zsythink.net/archives/1199
https://www.jianshu.com/p/c2aee2ff7bd8
https://www.digitalocean.com/community/tutorials/iptables-essentials-common-firewall-rules-and-commands
https://www.cyberciti.biz/tips/linux-iptables-examples.html
https://www.digitalocean.com/community/tutorials/how-to-choose-an-effective-firewall-policy-to-secure-your-servers
https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-firewalld-on-centos-7
https://www.linuxprobe.com/chapter-08.html

Iptalbes 是用来设置、维护和检查Linux内核的IP包过滤规则的。

1. 通用匹配：源地址目标地址的匹配
-s：指定作为源地址匹配，这里不能指定主机名称，必须是 IP
IP | IP/MASK | 0.0.0.0/0.0.0.0
而且地址可以取反，加一个 “!” 表示除了哪个 IP 之外
-d：表示匹配目标地址
-p：用于匹配协议的（这里的协议通常有 3 种，TCP/UDP/ICMP）
-i eth0：从这块网卡流入的数据

流入一般用在 INPUT 和 PREROUTING 上
-o eth0：从这块网卡流出的数据
流出一般在 OUTPUT 和 POSTROUTING 上

2. 扩展匹配
2.1 隐含扩展：对协议的扩展
-p tcp :TCP 协议的扩展。一般有三种扩展
--dport XX-XX：指定目标端口, 不能指定多个非连续端口, 只能指定单个端口，比如
--dport 21  或者 --dport 21-23 (此时表示 21,22,23)
--sport：指定源端口
--tcp-fiags：TCP 的标志位（SYN,ACK，FIN,PSH，RST,URG）
对于它，一般要跟两个参数：
1. 检查的标志位
2. 必须为 1 的标志位
--tcpflags syn,ack,fin,rst syn   =    --syn
表示检查这 4 个位，这 4 个位中 syn 必须为 1，其他的必须为 0。所以这个意思就是用于检测三次握手的第一次包的。
对于这种专门匹配第一包的 SYN 为 1 的包，还有一种简写方式，叫做 --syn

-p udp：UDP 协议的扩展
--dport
--sport
-p icmp：icmp 数据报文的扩展
--icmp-type：
echo-request(请求回显)，一般用 8 来表示
所以 --icmp-type 8 匹配请求回显数据包
echo-reply （响应的数据包）一般用 0 来表示

2.2 显式扩展（-m）

扩展各种模块
-m multiport：表示启用多端口扩展
之后我们就可以启用比如 --dports 21,23,80

详解 - j ACTION

常用的ACTION(TARGETS):
DROP：悄悄丢弃,一般我们多用 DROP 来隐藏我们的身份，以及隐藏我们的链表
REJECT：明示拒绝
ACCEPT：接受
custom_chain：转向一个自定义的链
DNAT
SNAT
MASQUERADE：源地址伪装
REDIRECT：重定向：主要用于实现端口重定向
MARK：打防火墙标记的
RETURN：返回
在自定义链执行完毕后使用返回，来返回原规则链。


fileter表工作流程：

Incoming                 /     \         Outgoing
       -->[Routing ]--->|FORWARD|------->
          [Decision]     \_____/        ^
               |                        |
               v                      ____
              ___                    /    \
             /   \                  |OUTPUT|
            |INPUT|                  \____/
             \___/                      ^
               |                        |
                ----> Local Process ----
                
                
1.iptables简单理解
包过滤规则组成了链，链组成了表
table -- chain -- rule
使用man iptables查看iptables相关操作或者使用iptables -h查看快捷操作
iptables 1.4.21 内置了5个表，优先级从高到低是(就是man手册中从下到上的表)：security，raw，mangle，nat，filter(默认)

如何查看表支持过滤链?
iptables -t [tablename] -L
比如:
~ $ iptables -L -t security

查看某个协议的帮助，-p后跟协议名称(不区分大小写)：
如需某個延伸的求助資料﹐可以使用選項後接 `-h' 或 `--help' 將之載入(`-p'﹑ `-j'﹑或 `-m')﹐例如﹕
shell> iptables -p tcp --help
tcp match options:
[!] --tcp-flags mask comp	match when TCP flags & mask == comp
				(Flags: SYN ACK FIN RST URG PSH ALL NONE)
[!] --syn			match when only SYN flag set
				(equivalent to --tcp-flags SYN,RST,ACK,FIN SYN)
[!] --source-port port[:port]
 --sport ...
				match source port(s)
[!] --destination-port port[:port]
 --dport ...
				match destination port(s)
[!] --tcp-option number        match if TCP option set

对于 127.0.0.1 比较特殊，我们需要明确定义它:
iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT
iptables -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT

禁止本机ping:
shell> iptables -A INPUT -s 127.0.0.1 -p icmp -j DROP

例如 `-p ! TCP' 則指定了所有非 TCP 的封包。

丢弃任何送给192.168.1.1的碎片:
iptables -A OUTPUT -f -d 192.168.1.1 -j DROP


2.配置文件
iptables相关的配置文件保存在：/etc/sysconfig/iptables-config
iptables定义的过滤规则保存在：/etc/sysconfig/iptables

3.配置保存和恢复
保存到系统文件中：
service iptables save
保存到自定义文件中：
# iptables-save > /root/my.active.firewall.rules
# cat /root/my.active.firewall.rules

从自定义文件中恢复：
# iptables-restore < /root/my.active.firewall.rules

还原默认配置：
# service iptables restart

以良好分类的方式查看当前iptables配置：
iptables -L

以原始方式查询当前iptables配置：
iptables -S

BTW: 在centos 7中还可以使用firewall-cmd来配置防火墙
