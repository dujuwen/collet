http://blog.csdn.net/yetyongjin/article/details/7740328
http://www.ivarch.com/programs/pv.shtml

1.命令行下的复制粘贴命令
mac下有pbcopy和pbpaste命令可以操作复制和粘贴
pbcopy < ~/.ssh/id_rsa.pub
cat ~/.ssh/id_rsa.pub | pbcopy

//输出到标准输出
pbpaste
//输出到文件
pbpaste > file , pbpaste >> file

linux下有clip、xsel

2.cat，可以连接和查看文件内容
利用heredoc将多行内容输入到文件
➜  csv cat << EOF  > file3
heredoc> sd
heredoc> dfd
heredoc> 技师的就是觉得
heredoc> 司法鉴定所肩负的
heredoc> 的角度讲过
heredoc> c
heredoc> EOF
➜  csv cat file3
sd
dfd
技师的就是觉得
司法鉴定所肩负的
的角度讲过
c

当输入EOF按回车后自动结束

//合并多个文件
cat file1 file2 > file3

//-b -n选项可以输出文件行数，-b非空行数，-n所有行数
cat -n file

//-s选项可以将多个相邻的空行合并成一个空行
cat -s file

cat some_data.txt > /dev/null这个命令的执行时间非常长，这说明了 some_data.txt 这个文件也足够大。但第二次执行这个命令时，执行时间则大大缩减了
/dev/null是 linux 的位桶文件，写入它的内容会永远丢失，从它那里什么也读取不到
由以上大致可以判断出，该用法是为了将文件内容导入到内存中，以便需要使用文件内容时能够快速获取。一般来说，从硬盘中读取数据需要 5ms 到 10ms 的时间，
而从内存中读取数据时通常只需要 50ns 到 100ns 的时间，这就是 page cache（页高速缓冲存储器）的作用

cat file >> file  //这种用法可以很快的将一个文件填充到很大(倍数填充)，缺点是无法控制最后文件的大小
上面代码在mac上可以执行，在centos下会报错：
root@bbs-dev ~ $ cat zzzzx >> zzzzx
cat: zzzzx: input file is output file

//cat - 可以将从键盘输入的内容回显出来
cat -
ctrl+D结束输入

3.timeout命令可以限制命令的执行时间
例如：timeout 3 ./xxx.sh //限制脚本执行时间为3秒

4.jq，命令行json数据处理器，在命令行和shell脚本里面处理json数据屌的不要不要的
https://www.jianshu.com/p/6de3cfdbdb0e

用法一，基础用法，将json字符串转换成成格式良好的数据
➜  csv cat json.txt | jq
[
  {
    "name": "站长工具",
    "url": "http://tool.chinaz.com",
    "address": {
      "city": "厦门",
      "country": "中国"
    },
    "arrayBrowser": [
      {
        "name": "Google",
        "url": "http://www.google.com"
      },
      {
        "name": "Baidu",
        "url": "http://www.baidu.com"
      }
    ]
  },
  {
    "name": "站长之家",
    "url": "http://tool.zzhome.com",
    "address": {
      "city": "大连",
      "country": "中国"
    },
    "arrayBrowser": [
      {
        "name": "360",
        "url": "http://www.so.com"
      },
      {
        "name": "bing",
        "url": "http://www.bing.com"
      }
    ]
  }
]

用法二，[index]，例如输出列表中的第一个元素：
➜  csv cat json.txt | jq '.[0]'
{
  "name": "站长工具",
  "url": "http://tool.chinaz.com",
  "address": {
    "city": "厦门",
    "country": "中国"
  },
  "arrayBrowser": [
    {
      "name": "Google",
      "url": "http://www.google.com"
    },
    {
      "name": "Baidu",
      "url": "http://www.baidu.com"
    }
  ]
}

用法三，管道连线操作|:
jq 支持管道线|，它如同 linux 命令中的管道线——把前面命令的输出当作是后面命令的输入。如下命令把.[0]作为{...}的输入，进而访问嵌套的属性，
如.name和.address.city。
➜  csv cat json.txt | jq '.[0] | {name:.name}'
{
  "name": "站长工具"
}

用法四，自定义key和输出数组[]:
➜  csv cat json.txt| jq '[.[] | {"自定义key":.name,"地址":.address.city}]'
[
  {
    "自定义key": "站长工具",
    "地址": "厦门"
  },
  {
    "自定义key": "站长之家",
    "地址": "大连"
  }
]

//.[0]过滤数据中的第一个元素，.[]数组中的所有元素，.address.city 这里的点后跟的属性(address和city)是原数据里面的

5.
