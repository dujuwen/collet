1.在linux服务器上配置ssh授权
https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server

公钥加密的消息只有对应的私钥才能解密

首先使用ssh-keygen目录生成ssh key对，注意如果之前的文件存在并且覆盖写的话之前的授权都不能使用了，这个覆盖过程是不可逆的

公钥被存在服务器上的~/.ssh/authorized_keys文件中

获取本地公钥：cat ~/.ssh/id_rsa.pub

将本地公钥上传到服务器的方法
方法一，使用ssh-copy-id工具(推荐)：
ssh-copy-id username@remote_host

方法二：
cat ~/.ssh/id_rsa.pub | ssh username@remote_host "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"

方法三，手动拷贝：
cat ~/.ssh/id_rsa.pub
mkdir -p ~/.ssh
echo public_key_string >> ~/.ssh/authorized_keys

注意服务器上authorized_keys的默认权限是0600:
root@bbs-dev .ssh $ l
total 16
-rw------- 1 root root  405 Mar 12 14:21 authorized_keys
-rw------- 1 root root 1675 Mar  9 15:57 id_rsa
-rw-r--r-- 1 root root  398 Mar  9 15:57 id_rsa.pub
-rwxrwxrwx 1 root root 1958 Mar  9 15:59 known_hosts

在配置好基于ssh登录服务器的方法后最后一步是关闭密码登录:
sudo vim /etc/ssh/sshd_config
PasswordAuthentication no

On Ubuntu or Debian machines, you can issue this command:
sudo service ssh restart

On CentOS/Fedora machines, the daemon is called sshd:
sudo service sshd restart

如果在配置ssh免密登录之后还是有问题的话就查看安全日志文件，它会告诉你为什么，一般情况下是/root目录权限 .ssh目录权限 或者 authorized_keys文件权限
tail -f /var/log/secure

一般/root 是0550
.ssh 是 0700
authorized_keys 是 0600

2.ssh基于key的授权是如何工作的？
https://www.digitalocean.com/community/tutorials/how-to-use-ssh-to-connect-to-a-remote-server-in-ubuntu

公钥存在服务器上，私钥存在客户机上。当使用键对连接两台机器的时候，服务器会发送一个用公钥加密的信息到客户机上，客户机收到后将解密后的信息反馈给
服务器，由服务器判断客户端是否合法。

How Does Key-based Authentication Work?
Key-based authentication works by creating a pair of keys: a private key and a public key.

The private key is located on the client machine and is secured and kept secret.
The public key can be given to anyone or placed on any server you wish to access.

When you attempt to connect using a key-pair, the server will use the public key to create a message for the client computer
that can only be read with the private key.

The client computer then sends the appropriate response back to the server and the server will know that the client is legitimate.

3.SSH Essentials
https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys

When a client connects to the host, wishing to use SSH key authentication, it will inform the server of this intent and will 
tell the server which public key to use. The server then check its authorized_keys file for the public key, generate a random
string and encrypts it using the public key. This encrypted message can only be decrypted with the associated private key. 
The server will send this encrypted message to the client to test whether they actually have the associated private key

Upon receipt of this message, the client will decrypt it using the private key and combine the random string that is revealed
with a previously negotiated session ID. It then generates an MD5 hash of this value and transmits it back to the server.
The server already had the original message and the session ID, so it can compare an MD5 hash generated by those values and 
determine that the client must have the private key.

显示指定公钥文件的指纹信息：
ssh-keygen -l
➜  ~ ssh-keygen -l
Enter file in which the key is (/Users/dujunwen/.ssh/id_rsa):
2048 SHA256:Rr0yIUFvQSr5DAbG69554V0ZDQTp2nwZ5vWFjbha9wA dujunwen@xiaolong.local (RSA)

登录的同时执行命令：
ssh username@remote_host command_to_run

使用指定端口登录：
ssh -p port_num username@remote_host
如果端口不是默认的22如何避免每次都输入端口呢？
修改本地配置文件：
vim ~/.ssh/config
Host remote_alias
HostName remote_host
Port port_num

Adding your SSH Keys to an SSH Agent to Avoid Typing the Passphrase
eval $(ssh-agent)
Agent pid 10891
ssh-add

4.ssh隧道
https://www.digitalocean.com/community/tutorials/ssh-essentials-working-with-ssh-servers-clients-and-keys#setting-up-ssh-tunnels
1).正向代理
正向代理语法：
ssh -L your_port:site_or_IP_to_access:site_port username@host
ssh -L 本地端口:想访问网站或者ip地址:网站端口 username@host

ssh [-f] -N -L 8888:example.com:80 username@remote_host // -f是将命令放到后台

通过正向代理可以将本地访问需求转发到其他机器上执行

2).反向代理
语法：
ssh -R remote_port:site_or_IP_to_access:site_port username@host
ssh -R remote_port:想要访问的网站或ip地址:端口 username@host

在本地执行：
> ssh  -N -R 8888:example.com:80 username@remote_host
例如：
在本地执行
➜  csv ssh -N -R 8555:localhost:8999 root@172.16.20.28
在root@172.16.20.28上执行：
root@bbs-dev ~ $ curl localhost:8555/admin/login

3).
