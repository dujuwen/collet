https://www.elastic.co/guide/en/elasticsearch/painless/6.2/index.html

painless不支持像java一样的函数重载

painless如何调试?
https://www.elastic.co/guide/en/elasticsearch/painless/6.2/painless-debugging.html

一般在不确定的地方抛出异常throw new Exception('whatever')，有个内置函数很好用Debug.explain

POST /hockey/player/1/_explain
{
  "query": {
    "script": {
      "script": "Debug.explain(doc.goals)"
    }
  }
}

painless所有可用函数:
https://www.elastic.co/guide/en/elasticsearch/painless/6.2/painless-api-reference.html

1.注释跟Java一样的
https://www.elastic.co/guide/en/elasticsearch/painless/6.2/painless-specification.html
单行注释：//
多行注释：/* ... */

2.常量
https://www.elastic.co/guide/en/elasticsearch/painless/6.2/literals.html

在painless中不能直接定义字符产量，只能通过类型转换单字符串的方式定义：
(char)"C"
(char)'c'

3.变量
https://www.elastic.co/guide/en/elasticsearch/painless/6.2/variables.html
变量只能以字母或下划线开始：
[_a-zA-Z] [_a-zA-Z-0-9]*
变量必须先声明后使用

4.数据类型分为动态类型和静态类型，静态类型又分为原始类型和引用类型
https://www.elastic.co/guide/en/elasticsearch/painless/6.2/types.html
动态类型def，动态类型可以赋任何值：
def x = 1;
def l = new ArrayList();

动态类型对性能有轻微的影响，如果性能比较重要的话应该使用静态类型

int[] x = new int[5];          // Declare int array x and assign it a newly
                               //   allocated int array with a size of 5
def[][] y = new def[5][5];     // Declare the 2-dimensional def array y and
                               //   assign it a newly allocated 2-dimensional
                               //   array where both dimensions have a size of 5
int[] x = new int[] {1, 2, 3}; // Declare int array x and set it to an int
                               //   array with values 1, 2, 3 and a size of 3
int i = 1;
long l = 2L;
float f = 3.0F;
double d = 4.0;
String s = "5";
def[] da = new def[] {i, l, f*d, s}; // Declare def array da and set it to
                                     // a def array with a size of 4 and the
                                     // values i, l, f*d, and s
                                     
5.



